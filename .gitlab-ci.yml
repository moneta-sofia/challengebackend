stages:
  - build_eureka
  - dockerize_eureka
  - upload_eureka
  - build_user
  - dockerize_user
  - upload_user
  - build_account
  - dockerize_account
  - upload_account
  - build_config_server
  - dockerize_config_server
  - upload_config_server
  - build_gateway
  - dockerize_gateway
  - upload_gateway
  - build_card_service
  - dockerize_card_service
  - upload_card_service
  - build_transaction_service
  - dockerize_transaction_service
  - upload_transaction_service

variables:
  MAVEN_CLI_OPTS: "-DskipTests"
  AWS_S3_BUCKET: "backend-challenge"
  AWS_REGION: "us-east-2"

# Jobs de Eureka
build_eureka_service:
  stage: build_eureka
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio eureka-server..."
    - cd eureka-server
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - eureka-server/target/*.jar

dockerize_eureka_service:
  stage: dockerize_eureka
  needs:
    - build_eureka_service
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv eureka-server/target/eureka-server.jar eureka-server/
    - docker build -t eureka-server:eureka-server-latest -f eureka-server/Dockerfile eureka-server/
    - docker save eureka-server:eureka-server-latest > eureka-server.tar
  artifacts:
    paths:
      - eureka-server.tar

upload_eureka_service:
  stage: upload_eureka
  needs:
    - dockerize_eureka_service
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp eureka-server.tar s3://$AWS_S3_BUCKET/project/eureka-server.tar --region $AWS_REGION

# Jobs de User
build_user_service:
  stage: build_user
  needs:
    - upload_eureka_service
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio user-service..."
    - cd user-service
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - user-service/target/*.jar

dockerize_user_service:
  stage: dockerize_user
  needs:
    - build_user_service
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv user-service/target/user-service.jar user-service/
    - docker build -t user-service:user-service-latest -f user-service/Dockerfile user-service/
    - docker save user-service:user-service-latest > user-service.tar
  artifacts:
    paths:
      - user-service.tar

upload_user_service:
  stage: upload_user
  needs:
    - dockerize_user_service
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp user-service.tar s3://$AWS_S3_BUCKET/project/user-service.tar --region $AWS_REGION

# Jobs de Account
build_account_service:
  stage: build_account
  needs:
    - upload_user_service
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio account-service..."
    - cd account-service
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - account-service/target/*.jar

dockerize_account_service:
  stage: dockerize_account
  needs:
    - build_account_service
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv account-service/target/account-service.jar account-service/
    - docker build -t account-service:account-service-latest -f account-service/Dockerfile account-service/
    - docker save account-service:account-service-latest > account-service.tar
  artifacts:
    paths:
      - account-service.tar

upload_account_service:
  stage: upload_account
  needs:
    - dockerize_account_service
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp account-service.tar s3://$AWS_S3_BUCKET/project/account-service.tar --region $AWS_REGION

# Jobs de Config Server
build_config_server:
  stage: build_config_server
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio config-server..."
    - cd config-server
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - config-server/target/*.jar

dockerize_config_server:
  stage: dockerize_config_server
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv config-server/target/config-server.jar config-server/
    - docker build -t config-server:config-server-latest -f config-server/Dockerfile config-server/
    - docker save config-server:config-server-latest > config-server.tar
  artifacts:
    paths:
      - config-server.tar

upload_config_server:
  stage: upload_config_server
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp config-server.tar s3://$AWS_S3_BUCKET/project/config-server.tar --region $AWS_REGION

# Jobs de Gateway
build_gateway:
  stage: build_gateway
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio gateway..."
    - cd gateway
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - gateway/target/*.jar

dockerize_gateway:
  stage: dockerize_gateway
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv gateway/target/gateway.jar gateway/
    - docker build -t gateway:gateway-latest -f gateway/Dockerfile gateway/
    - docker save gateway:gateway-latest > gateway.tar
  artifacts:
    paths:
      - gateway.tar

upload_gateway:
  stage: upload_gateway
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp gateway.tar s3://$AWS_S3_BUCKET/project/gateway.tar --region $AWS_REGION

# Jobs de Card Service
build_card_service:
  stage: build_card_service
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio card-service..."
    - cd card-service
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - card-service/target/*.jar

dockerize_card_service:
  stage: dockerize_card_service
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv card-service/target/card-service.jar card-service/
    - docker build -t card-service:card-service-latest -f card-service/Dockerfile card-service/
    - docker save card-service:card-service-latest > card-service.tar
  artifacts:
    paths:
      - card-service.tar

upload_card_service:
  stage: upload_card_service
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp card-service.tar s3://$AWS_S3_BUCKET/project/card-service.tar --region $AWS_REGION

# Jobs de Transaction Service
build_transaction_service:
  stage: build_transaction_service
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio transaction-service..."
    - cd transaction-service
    - mvn clean install $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - transaction-service/target/*.jar

dockerize_transaction_service:
  stage: dockerize_transaction_service
  image: docker:latest
  services:
    - docker:dind
  script:
    - mv transaction-service/target/transaction-service.jar transaction-service/
    - docker build -t transaction-service:transaction-service-latest -f transaction-service/Dockerfile transaction-service/
    - docker save transaction-service:transaction-service-latest > transaction-service.tar
  artifacts:
    paths:
      - transaction-service.tar

upload_transaction_service:
  stage: upload_transaction_service
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - aws s3 cp transaction-service.tar s3://
