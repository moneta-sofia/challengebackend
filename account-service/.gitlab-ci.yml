stages:
  - build
  - dockerize
  - upload

variables:
  MAVEN_CLI_OPTS: "-DskipTests"
  DOCKER_IMAGE_NAME: "account-service"
  AWS_S3_BUCKET: "backend-challenge"
  AWS_REGION: "us-east-2"


build_account_service:
  stage: build
  needs:
    - upload_user_service_to_s3
  image: maven:3.8.1-openjdk-17
  script:
    - echo "Compilando el microservicio account-service..."
    - cd account-service
    - mvn clean install $MAVEN_CLI_OPTS
    - ls -l target/
    - ls -l

  artifacts:
    paths:
      - account-service/target/*.jar

dockerize_account_service:
  stage: dockerize
  needs:
    - build_account_service
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Preparando el archivo JAR para el build Docker..."
    - mv account-service/target/account-service.jar account-service/ # Copia el JAR al nivel del Dockerfile
    - echo "Construyendo la imagen Docker de account-service..."
    - docker build -t $DOCKER_IMAGE_NAME:account-service-latest -f account-service/Dockerfile account-service/
    - docker save $DOCKER_IMAGE_NAME:account-service-latest > account-service.tar
  artifacts:
    paths:
      - account-service.tar


upload_account_service_to_s3:
  stage: upload
  needs:
    - dockerize_account_service
  image: amazonlinux:2
  before_script:
    - yum install -y aws-cli
  script:
    - ls -l
    - echo "Configurando AWS CLI..."
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_REGION
    - echo "Verificando configuraci√≥n de AWS CLI..."
    - aws s3 ls
    - echo "Subiendo imagen Docker a S3..."
    - aws s3 cp account-service.tar s3://$AWS_S3_BUCKET/project/account-service.tar --region $AWS_REGION